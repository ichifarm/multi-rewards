{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ichiFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "ichiVault",
          "type": "address"
        }
      ],
      "name": "StakerCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bytecodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cachedDeployData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ichiVault",
          "type": "address"
        }
      ],
      "name": "deployStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ichiFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultToStaker",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/MultiFeeDistributionFactory.sol",
    "12": "interfaces/IICHIVault.sol",
    "13": "interfaces/IMultiFeeDistributionFactory.sol",
    "14": "interfaces/IOwnable.sol",
    "3": "/Users/mohammedshaikjee/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/mohammedshaikjee/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.0/contracts/token/ERC20/extensions/IERC20Permit.sol",
    "6": "/Users/mohammedshaikjee/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "7": "/Users/mohammedshaikjee/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.0/contracts/utils/Address.sol",
    "9": "contracts/MultiFeeDistribution.sol"
  },
  "ast": {
    "absolutePath": "contracts/MultiFeeDistributionFactory.sol",
    "exportedSymbols": {
      "IICHIVault": [
        2031
      ],
      "IMultiFeeDistributionFactory": [
        2064
      ],
      "IOwnable": [
        2072
      ],
      "MultiFeeDistribution": [
        979
      ],
      "MultiFeeDistributionFactory": [
        1109
      ],
      "Ownable": [
        1433
      ]
    },
    "id": 1110,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 981,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "contracts/MultiFeeDistribution.sol",
        "file": "./MultiFeeDistribution.sol",
        "id": 983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1110,
        "sourceUnit": 980,
        "src": "58:66:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 982,
              "name": "MultiFeeDistribution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 979,
              "src": "67:20:10",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_MultiFeeDistribution_$979_$",
                "typeString": "type(contract MultiFeeDistribution)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMultiFeeDistributionFactory.sol",
        "file": "interfaces/IMultiFeeDistributionFactory.sol",
        "id": 985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1110,
        "sourceUnit": 2065,
        "src": "125:91:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 984,
              "name": "IMultiFeeDistributionFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2064,
              "src": "134:28:10",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IMultiFeeDistributionFactory_$2064_$",
                "typeString": "type(contract IMultiFeeDistributionFactory)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IOwnable.sol",
        "file": "interfaces/IOwnable.sol",
        "id": 987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1110,
        "sourceUnit": 2073,
        "src": "217:51:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 986,
              "name": "IOwnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2072,
              "src": "226:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IOwnable_$2072_$",
                "typeString": "type(contract IOwnable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IICHIVault.sol",
        "file": "interfaces/IICHIVault.sol",
        "id": 989,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1110,
        "sourceUnit": 2032,
        "src": "269:55:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 988,
              "name": "IICHIVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2031,
              "src": "278:10:10",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_IICHIVault_$2031_$",
                "typeString": "type(contract IICHIVault)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mohammedshaikjee/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.9.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 991,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1110,
        "sourceUnit": 1434,
        "src": "325:69:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 990,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1433,
              "src": "334:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_type$_t_contract$_Ownable_$1433_$",
                "typeString": "type(contract Ownable)"
              }
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 992,
              "name": "IMultiFeeDistributionFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2064,
              "src": "436:28:10"
            },
            "id": 993,
            "nodeType": "InheritanceSpecifier",
            "src": "436:28:10"
          },
          {
            "baseName": {
              "id": 994,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1433,
              "src": "466:7:10"
            },
            "id": 995,
            "nodeType": "InheritanceSpecifier",
            "src": "466:7:10"
          }
        ],
        "canonicalName": "MultiFeeDistributionFactory",
        "contractDependencies": [
          979
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1109,
        "linearizedBaseContracts": [
          1109,
          1433,
          2681,
          2064
        ],
        "name": "MultiFeeDistributionFactory",
        "nameLocation": "405:27:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2044
            ],
            "constant": true,
            "functionSelector": "420c6a2c",
            "id": 1004,
            "mutability": "constant",
            "name": "bytecodeHash",
            "nameLocation": "513:12:10",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 997,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "495:8:10"
            },
            "scope": 1109,
            "src": "480:106:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 996,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "480:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1000,
                        "name": "MultiFeeDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 979,
                        "src": "551:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MultiFeeDistribution_$979_$",
                          "typeString": "type(contract MultiFeeDistribution)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_type$_t_contract$_MultiFeeDistribution_$979_$",
                          "typeString": "type(contract MultiFeeDistribution)"
                        }
                      ],
                      "id": 999,
                      "name": "type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -27,
                      "src": "546:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "546:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_meta_type_t_contract$_MultiFeeDistribution_$979",
                      "typeString": "type(contract MultiFeeDistribution)"
                    }
                  },
                  "id": 1002,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberName": "creationCode",
                  "nodeType": "MemberAccess",
                  "src": "546:39:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 998,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "536:9:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1003,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "536:50:10",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2049
            ],
            "constant": false,
            "functionSelector": "0c90eb65",
            "id": 1007,
            "mutability": "mutable",
            "name": "cachedDeployData",
            "nameLocation": "674:16:10",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1006,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "665:8:10"
            },
            "scope": 1109,
            "src": "652:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 1005,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "652:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2056
            ],
            "constant": false,
            "functionSelector": "37b44560",
            "id": 1012,
            "mutability": "mutable",
            "name": "vaultToStaker",
            "nameLocation": "741:13:10",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 1011,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "732:8:10"
            },
            "scope": 1109,
            "src": "697:57:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1010,
              "keyType": {
                "id": 1008,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "705:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "697:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1009,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "716:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5b15efac",
            "id": 1014,
            "mutability": "immutable",
            "name": "ichiFactory",
            "nameLocation": "786:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 1109,
            "src": "761:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1013,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "761:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1023,
              "nodeType": "Block",
              "src": "838:43:10",
              "statements": [
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1019,
                      "name": "ichiFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "848:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1020,
                      "name": "_ichiFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "862:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "848:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "848:26:10"
                }
              ]
            },
            "id": 1024,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "_ichiFactory",
                  "nameLocation": "824:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1024,
                  "src": "816:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:22:10"
            },
            "returnParameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "838:0:10"
            },
            "scope": 1109,
            "src": "804:77:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2063
            ],
            "body": {
              "id": 1107,
              "nodeType": "Block",
              "src": "971:762:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1033,
                            "name": "vaultToStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "990:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1035,
                          "indexExpression": {
                            "id": 1034,
                            "name": "ichiVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "1004:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "990:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1026:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1018:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1036,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1018:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1018:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "990:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414c52454144595f4445504c4f594544",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1030:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_984b84b092c951a5be9ca668e3d565f38e56cb9f004a19587015224121dcb607",
                          "typeString": "literal_string \"ALREADY_DEPLOYED\""
                        },
                        "value": "ALREADY_DEPLOYED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_984b84b092c951a5be9ca668e3d565f38e56cb9f004a19587015224121dcb607",
                          "typeString": "literal_string \"ALREADY_DEPLOYED\""
                        }
                      ],
                      "id": 1032,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "982:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:67:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "982:67:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1046,
                                  "name": "ichiVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1026,
                                  "src": "1273:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1045,
                                "name": "IICHIVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2031,
                                "src": "1262:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IICHIVault_$2031_$",
                                  "typeString": "type(contract IICHIVault)"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1262:21:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IICHIVault_$2031",
                                "typeString": "contract IICHIVault"
                              }
                            },
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ichiVaultFactory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2027,
                            "src": "1262:38:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1262:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1050,
                          "name": "ichiFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "1306:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1262:55:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e56414c49445f5646",
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1319:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3ad8b45d2e3283508831321d92b8a144d1174f6da7784cbfde7f6035881368e",
                          "typeString": "literal_string \"INVALID_VF\""
                        },
                        "value": "INVALID_VF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3ad8b45d2e3283508831321d92b8a144d1174f6da7784cbfde7f6035881368e",
                          "typeString": "literal_string \"INVALID_VF\""
                        }
                      ],
                      "id": 1044,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1254:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:78:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:78:10"
                },
                {
                  "assignments": [
                    1056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1056,
                      "mutability": "mutable",
                      "name": "_deployData",
                      "nameLocation": "1356:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1107,
                      "src": "1343:24:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1055,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1343:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1061,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1059,
                        "name": "ichiVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1026,
                        "src": "1381:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1057,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1370:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "1370:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:48:10"
                },
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1062,
                      "name": "cachedDeployData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "1401:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1063,
                      "name": "_deployData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "1420:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1401:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:30:10"
                },
                {
                  "assignments": [
                    1067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1067,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1450:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1107,
                      "src": "1442:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1066,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1442:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1071,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1069,
                        "name": "_deployData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1467:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1068,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1457:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:22:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1442:37:10"
                },
                {
                  "expression": {
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1072,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "1489:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1506:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MultiFeeDistribution_$979_$",
                                "typeString": "function () returns (contract MultiFeeDistribution)"
                              },
                              "typeName": {
                                "id": 1076,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1075,
                                  "name": "MultiFeeDistribution",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 979,
                                  "src": "1510:20:10"
                                },
                                "referencedDeclaration": 979,
                                "src": "1510:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MultiFeeDistribution_$979",
                                  "typeString": "contract MultiFeeDistribution"
                                }
                              }
                            },
                            "id": 1079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "salt"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1078,
                                "name": "salt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1067,
                                "src": "1537:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "src": "1506:36:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MultiFeeDistribution_$979_$salt",
                              "typeString": "function () returns (contract MultiFeeDistribution)"
                            }
                          },
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1506:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MultiFeeDistribution_$979",
                            "typeString": "contract MultiFeeDistribution"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MultiFeeDistribution_$979",
                            "typeString": "contract MultiFeeDistribution"
                          }
                        ],
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1498:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1498:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1498:47:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1489:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "1489:56:10"
                },
                {
                  "expression": {
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1556:23:10",
                    "subExpression": {
                      "id": 1084,
                      "name": "cachedDeployData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "1563:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "1556:23:10"
                },
                {
                  "expression": {
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1087,
                        "name": "vaultToStaker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "1590:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1089,
                      "indexExpression": {
                        "id": 1088,
                        "name": "ichiVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1026,
                        "src": "1604:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1590:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1090,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "1617:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1590:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:33:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1097,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "1669:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1669:7:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1094,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "1643:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1093,
                          "name": "IOwnable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2072,
                          "src": "1634:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOwnable_$2072_$",
                            "typeString": "type(contract IOwnable)"
                          }
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1634:16:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOwnable_$2072",
                          "typeString": "contract IOwnable"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2071,
                      "src": "1634:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:43:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1707:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1707:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1104,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "1719:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1101,
                      "name": "StakerCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "1693:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1106,
                  "nodeType": "EmitStatement",
                  "src": "1688:38:10"
                }
              ]
            },
            "functionSelector": "1e32166b",
            "id": 1108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployStaker",
            "nameLocation": "896:12:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1028,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "937:8:10"
            },
            "parameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "ichiVault",
                  "nameLocation": "917:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "909:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "908:19:10"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "963:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1108,
                  "src": "955:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:16:10"
            },
            "scope": 1109,
            "src": "887:846:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1110,
        "src": "396:1340:10",
        "usedErrors": []
      }
    ],
    "src": "32:1705:10"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516127b23803806127b283398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b6080516126c76100eb6000396000818161011a015261025c01526126c76000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635b15efac1161005b5780635b15efac14610115578063715018a61461013c5780638da5cb5b14610146578063f2fde38b1461015757600080fd5b80630c90eb651461008d5780631e32166b146100ab57806337b44560146100d6578063420c6a2c146100ff575b600080fd5b61009561016a565b6040516100a291906106c7565b60405180910390f35b6100be6100b9366004610731565b6101f8565b6040516001600160a01b0390911681526020016100a2565b6100be6100e4366004610731565b6002602052600090815260409020546001600160a01b031681565b610107610486565b6040519081526020016100a2565b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6101446104b3565b005b6000546001600160a01b03166100be565b610144610165366004610731565b6104c7565b6001805461017790610755565b80601f01602080910402602001604051908101604052809291908181526020018280546101a390610755565b80156101f05780601f106101c5576101008083540402835291602001916101f0565b820191906000526020600020905b8154815290600101906020018083116101d357829003601f168201915b505050505081565b6001600160a01b038181166000908152600260205260408120549091161561025a5760405162461bcd60e51b815260206004820152601060248201526f1053149150511657d111541313d6515160821b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031663dd81fa636040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190610790565b6001600160a01b0316146103295760405162461bcd60e51b815260206004820152600a60248201526924a72b20a624a22fab2360b11b6044820152606401610251565b604080516001600160a01b03841660208201526000910160408051601f1981840301815291905280519091506103669060019060208401906105ea565b5080516020820120604051819061037c9061066e565b8190604051809103906000f590508015801561039c573d6000803e3d6000fd5b5092506103ab6001600061067c565b6001600160a01b03808516600090815260026020526040902080549185166001600160a01b03199092168217905563f2fde38b6103f06000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b50506040516001600160a01b03861692503391507fca0ca08d677e6066ba2a607057b454a3d31f555febbb6ff46b273ee02704f08090600090a35050919050565b6040516104956020820161066e565b6020820181038252601f19601f820116604052508051906020012081565b6104bb610540565b6104c5600061059a565b565b6104cf610540565b6001600160a01b0381166105345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610251565b61053d8161059a565b50565b6000546001600160a01b031633146104c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610251565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546105f690610755565b90600052602060002090601f016020900481019282610618576000855561065e565b82601f1061063157805160ff191683800117855561065e565b8280016001018555821561065e579182015b8281111561065e578251825591602001919060010190610643565b5061066a9291506106b2565b5090565b611ee480620007ae83390190565b50805461068890610755565b6000825580601f10610698575050565b601f01602090049060005260206000209081019061053d91905b5b8082111561066a57600081556001016106b3565b600060208083528351808285015260005b818110156106f4578581018301518582016040015282016106d8565b81811115610706576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461053d57600080fd5b60006020828403121561074357600080fd5b813561074e8161071c565b9392505050565b600181811c9082168061076957607f821691505b6020821081141561078a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156107a257600080fd5b815161074e8161071c56fe60a06040523480156200001157600080fd5b506000805460ff191690556200002733620000f0565b60003390506000816001600160a01b0316630c90eb656040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200006d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009791908101906200015f565b9050600081806020019051810190620000b191906200023b565b90506001600160a01b038116620000db57604051639fabe1c160e01b815260040160405180910390fd5b6001600160a01b0316608052506200026d9050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200017357600080fd5b82516001600160401b03808211156200018b57600080fd5b818501915085601f830112620001a057600080fd5b815181811115620001b557620001b562000149565b604051601f8201601f19908116603f01168101908382118183101715620001e057620001e062000149565b816040528281528886848701011115620001f957600080fd5b600093505b828410156200021d5784840186015181850187015292850192620001fe565b828411156200022f5760008684830101525b98975050505050505050565b6000602082840312156200024e57600080fd5b81516001600160a01b03811681146200026657600080fd5b9392505050565b608051611c3f620002a560003960008181610291015281816106d301528181610c0a01528181610ffe01526111ce0152611c3f6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80637bb7bed1116100de578063bf9befb111610097578063dc01f60d11610071578063dc01f60d146103d5578063f2fde38b146103f6578063f36c0a7214610409578063fdff9b4d1461041157600080fd5b8063bf9befb114610372578063c89109131461037b578063d4570c1c146103aa57600080fd5b80637bb7bed1146102de5780638456cb59146102f15780638980f11f146102f95780638da5cb5b1461030c5780639c9b2e2114610322578063a765a9571461033557600080fd5b806348e5d9f81161013057806348e5d9f8146101ec5780635c975abb146102365780636eacd3981461024d578063715018a61461028457806372f702f31461028c5780637acb7757146102cb57600080fd5b806310f3ee29146101785780632e17de781461018d57806331279d3d146101a0578063367caa09146101c95780633f4ba83a146101dc57806345b35f56146101e4575b600080fd5b61018b6101863660046117bb565b610434565b005b61018b61019b366004611830565b610506565b6101b36101ae36600461187b565b610513565b6040516101c0919061198e565b60405180910390f35b61018b6101d73660046117bb565b610526565b61018b6105f2565b6101b3610604565b61021b6101fa3660046119a1565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101c0565b60005460ff165b60405190151581526020016101c0565b61027661025b3660046119a1565b6001600160a01b031660009081526004602052604090205490565b6040519081526020016101c0565b61018b61066f565b6102b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c0565b61018b6102d93660046119bc565b610681565b6102b36102ec366004611830565b61068f565b61018b6106b9565b61018b6103073660046119e8565b6106c9565b60005461010090046001600160a01b03166102b3565b61018b6103303660046119a1565b6107cb565b610276610343366004611a12565b6001600160a01b0391821660009081526004602090815260408083209390941682526003909201909152205490565b61027660015481565b61021b6103893660046119a1565b60046020526000908152604090208054600182015460029092015490919083565b6102766103b8366004611a12565b600560209081526000928352604080842090915290825290205481565b6103e86103e33660046119a1565b6108e5565b6040516101c0929190611a3c565b61018b6104043660046119a1565b610a7e565b61018b610af9565b61023d61041f3660046119a1565b60066020526000908152604090205460ff1681565b61043c610b01565b8060005b8181101561050057600084848381811061045c5761045c611a9c565b905060200201602081019061047191906119a1565b6001600160a01b0316141561049957604051639fabe1c160e01b815260040160405180910390fd5b6000600660008686858181106104b1576104b1611a9c565b90506020020160208101906104c691906119a1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806104f881611ac8565b915050610440565b50505050565b6105108133610b61565b50565b606061051f8383610ca7565b9392505050565b61052e610b01565b8060005b8181101561050057600084848381811061054e5761054e611a9c565b905060200201602081019061056391906119a1565b6001600160a01b0316141561058b57604051639fabe1c160e01b815260040160405180910390fd5b6001600660008686858181106105a3576105a3611a9c565b90506020020160208101906105b891906119a1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806105ea81611ac8565b915050610532565b6105fa610b01565b610602610ee1565b565b606061066a33600280548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610642575b5050505050610ca7565b905090565b610677610b01565b6106026000610f33565b61068b8282610f8c565b5050565b6002818154811061069f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6106c1610b01565b6106026110ab565b6106d1610b01565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561072457604051630aeb29ff60e01b815260040160405180910390fd5b6001600160a01b0382166000908152600360205260409020600101541561075e57604051637e2e4d1360e01b815260040160405180910390fd5b6000546107849061010090046001600160a01b03166001600160a01b03841690836110e8565b816001600160a01b03167f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28826040516107bf91815260200190565b60405180910390a25050565b6001600160a01b0381166107f25760405163eeddf6ab60e01b815260040160405180910390fd5b3360009081526006602052604090205460ff1661082257604051630deda90360e41b815260040160405180910390fd5b60005b60025481101561089257816001600160a01b03166002828154811061084c5761084c611a9c565b6000918252602090912001546001600160a01b0316141561088057604051637e2e4d1360e01b815260040160405180910390fd5b8061088a81611ac8565b915050610825565b50600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0392909216919091179055565b606080600060028054905067ffffffffffffffff81111561090857610908611865565b604051908082528060200260200182016040528015610931578160200160208202803683370190505b50905060005b600254811015610a14576e111b0ec57e6499a1f4b1014d3f6d5960321b610985866002848154811061096b5761096b611a9c565b6000918252602090912001546001600160a01b0316611150565b61098f9190611ae3565b60056000600284815481106109a6576109a6611a9c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020546109e59190611b05565b8282815181106109f7576109f7611a9c565b602090810291909101015280610a0c81611ac8565b915050610937565b5060028181805480602002602001604051908101604052809291908181526020018280548015610a6d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a4f575b505050505091509250925050915091565b610a86610b01565b6001600160a01b038116610af05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61051081610f33565b6106026111cc565b6000546001600160a01b036101009091041633146106025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ae7565b6001600160a01b03811660009081526004602052604090208054831180610b86575082155b15610ba45760405163162908e360e11b815260040160405180910390fd5b610bac6111cc565b60005b600254811015610bfc57610bea8360028381548110610bd057610bd0611a9c565b6000918252602090912001546001600160a01b031661136f565b80610bf481611ac8565b915050610baf565b50610c316001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683856110e8565b82816000016000828254610c459190611b1d565b925050819055508260016000828254610c5e9190611b1d565b90915550506040518381526001600160a01b038316907f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd906020015b60405180910390a2505050565b6060610cb1611492565b815167ffffffffffffffff811115610ccb57610ccb611865565b604051908082528060200260200182016040528015610cf4578160200160208202803683370190505b50905060005b8251811015610eda576000838281518110610d1757610d17611a9c565b60200260200101519050600060036000836001600160a01b03166001600160a01b031681526020019081526020016000209050610d526111cc565b610d5c868361136f565b6001600160a01b038083166000908152600560209081526040808320938a168352929052205415610ec5576001600160a01b038083166000908152600560209081526040808320938a16835292905220548451859085908110610dc157610dc1611a9c565b6020908102919091018101919091526001600160a01b038084166000818152600584526040808220938b16825292909352912054610e01919088906110e8565b6001600160a01b038083166000908152600560209081526040808320938a16835292905290812054825490918391610e3a908490611b1d565b90915550506001600160a01b038281166000818152600560209081526040808320948b16808452948252918290205491519182529192917f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e910160405180910390a36001600160a01b038083166000908152600560209081526040808320938a168352929052908120555b50508080610ed290611ac8565b915050610cfa565b5092915050565b610ee96114d8565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b610f94611492565b81610fb25760405163162908e360e11b815260040160405180910390fd5b610fba6111cc565b60005b600254811015610ff057610fde8260028381548110610bd057610bd0611a9c565b80610fe881611ac8565b915050610fbd565b506110266001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611521565b6001600160a01b0381166000908152600460205260408120805490918491839190611052908490611b05565b92505081905550826001600082825461106b9190611b05565b90915550506040518381526001600160a01b038316907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90602001610c9a565b6110b3611492565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f163390565b6040516001600160a01b03831660248201526044810182905261114b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611559565b505050565b6001600160a01b038082166000818152600360208181526040808420815160608101835281548152600182015481850152600290910154818301908152968916855260048352818520805496865293840190925283205494519294909391926111b99190611b1d565b6111c39190611b34565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370bb45b36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561122757600080fd5b505af115801561123b573d6000803e3d6000fd5b5050505060005b6002548110156105105760006002828154811061126157611261611a9c565b6000918252602090912001546001546001600160a01b0390911691501561135c576001600160a01b03811660008181526003602052604080822090516370a0823160e01b81523060048201529092906370a0823190602401602060405180830381865afa1580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fa9190611b53565b825490915060009061130c9083611b1d565b4260018086019190915554909150611336826e111b0ec57e6499a1f4b1014d3f6d5960321b611b34565b6113409190611ae3565b8360020160008282546113539190611b05565b90915550505090555b508061136781611ac8565b915050611242565b6001600160a01b038083166000908152600460209081526040808320938516835260038252918290208251606081018452815481526001808301549382019390935260029091015492810192909252820154158015906113cf5750815415155b156114665781546001600160a01b03841660009081526003840160205260409081902054908301516e111b0ec57e6499a1f4b1014d3f6d5960321b929161141591611b1d565b61141f9190611b34565b6114299190611ae3565b6001600160a01b03808516600090815260056020908152604080832093891683529290529081208054909190611460908490611b05565b90915550505b6040908101516001600160a01b0390931660009081526003830160205220919091554260019091015550565b60005460ff16156106025760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610ae7565b60005460ff166106025760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ae7565b6040516001600160a01b03808516602483015283166044820152606481018290526105009085906323b872dd60e01b90608401611114565b60006115ae826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661162e9092919063ffffffff16565b90508051600014806115cf5750808060200190518101906115cf9190611b6c565b61114b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ae7565b606061163d8484600085611645565b949350505050565b6060824710156116a65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ae7565b600080866001600160a01b031685876040516116c29190611bba565b60006040518083038185875af1925050503d80600081146116ff576040519150601f19603f3d011682016040523d82523d6000602084013e611704565b606091505b509150915061171587838387611720565b979650505050505050565b6060831561178c578251611785576001600160a01b0385163b6117855760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ae7565b508161163d565b61163d83838151156117a15781518083602001fd5b8060405162461bcd60e51b8152600401610ae79190611bd6565b600080602083850312156117ce57600080fd5b823567ffffffffffffffff808211156117e657600080fd5b818501915085601f8301126117fa57600080fd5b81358181111561180957600080fd5b8660208260051b850101111561181e57600080fd5b60209290920196919550909350505050565b60006020828403121561184257600080fd5b5035919050565b80356001600160a01b038116811461186057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561188e57600080fd5b61189783611849565b915060208084013567ffffffffffffffff808211156118b557600080fd5b818601915086601f8301126118c957600080fd5b8135818111156118db576118db611865565b8060051b604051601f19603f8301168101818110858211171561190057611900611865565b60405291825284820192508381018501918983111561191e57600080fd5b938501935b828510156119435761193485611849565b84529385019392850192611923565b8096505050505050509250929050565b600081518084526020808501945080840160005b8381101561198357815187529582019590820190600101611967565b509495945050505050565b60208152600061051f6020830184611953565b6000602082840312156119b357600080fd5b61051f82611849565b600080604083850312156119cf57600080fd5b823591506119df60208401611849565b90509250929050565b600080604083850312156119fb57600080fd5b611a0483611849565b946020939093013593505050565b60008060408385031215611a2557600080fd5b611a2e83611849565b91506119df60208401611849565b604080825283519082018190526000906020906060840190828701845b82811015611a7e5781516001600160a01b031684529284019290840190600101611a59565b50505083810382850152611a928186611953565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611adc57611adc611ab2565b5060010190565b600082611b0057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611b1857611b18611ab2565b500190565b600082821015611b2f57611b2f611ab2565b500390565b6000816000190483118215151615611b4e57611b4e611ab2565b500290565b600060208284031215611b6557600080fd5b5051919050565b600060208284031215611b7e57600080fd5b8151801515811461051f57600080fd5b60005b83811015611ba9578181015183820152602001611b91565b838111156105005750506000910152565b60008251611bcc818460208701611b8e565b9190910192915050565b6020815260008251806020840152611bf5816040850160208701611b8e565b601f01601f1916919091016040019291505056fea264697066735822122087e14479dbb2d67e7700b01d0f7b9d95bac26d3f30fde2fe80e0c01e990f65f664736f6c634300080c0033a2646970667358221220703b7fb79ad36a7829e3ab734ae0bbe7d2df89d9dd4ca583c4274b999cce5e9064736f6c634300080c0033",
  "bytecodeSha1": "2e26761baab17fc8c39fbcbd1d32f1cbe439d928",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MultiFeeDistributionFactory",
  "coverageMap": {
    "branches": {
      "10": {
        "MultiFeeDistributionFactory.deployStaker": {
          "8": [
            990,
            1028,
            true
          ],
          "9": [
            1262,
            1317,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "3": {},
      "5": {},
      "6": {},
      "7": {},
      "9": {}
    },
    "statements": {
      "10": {
        "MultiFeeDistributionFactory.deployStaker": {
          "0": [
            982,
            1049
          ],
          "1": [
            1254,
            1332
          ],
          "2": [
            1401,
            1431
          ],
          "3": [
            1489,
            1545
          ],
          "4": [
            1556,
            1579
          ],
          "5": [
            1590,
            1623
          ],
          "6": [
            1634,
            1677
          ],
          "7": [
            1688,
            1726
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "3": {},
      "5": {},
      "6": {},
      "7": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.9.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.9.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.9.0/IERC20Permit",
    "IICHIVault",
    "IMultiFeeDistributionFactory",
    "IOwnable",
    "MultiFeeDistribution",
    "OpenZeppelin/openzeppelin-contracts@4.9.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c80635b15efac1161005b5780635b15efac14610115578063715018a61461013c5780638da5cb5b14610146578063f2fde38b1461015757600080fd5b80630c90eb651461008d5780631e32166b146100ab57806337b44560146100d6578063420c6a2c146100ff575b600080fd5b61009561016a565b6040516100a291906106c7565b60405180910390f35b6100be6100b9366004610731565b6101f8565b6040516001600160a01b0390911681526020016100a2565b6100be6100e4366004610731565b6002602052600090815260409020546001600160a01b031681565b610107610486565b6040519081526020016100a2565b6100be7f000000000000000000000000000000000000000000000000000000000000000081565b6101446104b3565b005b6000546001600160a01b03166100be565b610144610165366004610731565b6104c7565b6001805461017790610755565b80601f01602080910402602001604051908101604052809291908181526020018280546101a390610755565b80156101f05780601f106101c5576101008083540402835291602001916101f0565b820191906000526020600020905b8154815290600101906020018083116101d357829003601f168201915b505050505081565b6001600160a01b038181166000908152600260205260408120549091161561025a5760405162461bcd60e51b815260206004820152601060248201526f1053149150511657d111541313d6515160821b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031663dd81fa636040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190610790565b6001600160a01b0316146103295760405162461bcd60e51b815260206004820152600a60248201526924a72b20a624a22fab2360b11b6044820152606401610251565b604080516001600160a01b03841660208201526000910160408051601f1981840301815291905280519091506103669060019060208401906105ea565b5080516020820120604051819061037c9061066e565b8190604051809103906000f590508015801561039c573d6000803e3d6000fd5b5092506103ab6001600061067c565b6001600160a01b03808516600090815260026020526040902080549185166001600160a01b03199092168217905563f2fde38b6103f06000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b50506040516001600160a01b03861692503391507fca0ca08d677e6066ba2a607057b454a3d31f555febbb6ff46b273ee02704f08090600090a35050919050565b6040516104956020820161066e565b6020820181038252601f19601f820116604052508051906020012081565b6104bb610540565b6104c5600061059a565b565b6104cf610540565b6001600160a01b0381166105345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610251565b61053d8161059a565b50565b6000546001600160a01b031633146104c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610251565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546105f690610755565b90600052602060002090601f016020900481019282610618576000855561065e565b82601f1061063157805160ff191683800117855561065e565b8280016001018555821561065e579182015b8281111561065e578251825591602001919060010190610643565b5061066a9291506106b2565b5090565b611ee480620007ae83390190565b50805461068890610755565b6000825580601f10610698575050565b601f01602090049060005260206000209081019061053d91905b5b8082111561066a57600081556001016106b3565b600060208083528351808285015260005b818110156106f4578581018301518582016040015282016106d8565b81811115610706576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461053d57600080fd5b60006020828403121561074357600080fd5b813561074e8161071c565b9392505050565b600181811c9082168061076957607f821691505b6020821081141561078a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156107a257600080fd5b815161074e8161071c56fe60a06040523480156200001157600080fd5b506000805460ff191690556200002733620000f0565b60003390506000816001600160a01b0316630c90eb656040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200006d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009791908101906200015f565b9050600081806020019051810190620000b191906200023b565b90506001600160a01b038116620000db57604051639fabe1c160e01b815260040160405180910390fd5b6001600160a01b0316608052506200026d9050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200017357600080fd5b82516001600160401b03808211156200018b57600080fd5b818501915085601f830112620001a057600080fd5b815181811115620001b557620001b562000149565b604051601f8201601f19908116603f01168101908382118183101715620001e057620001e062000149565b816040528281528886848701011115620001f957600080fd5b600093505b828410156200021d5784840186015181850187015292850192620001fe565b828411156200022f5760008684830101525b98975050505050505050565b6000602082840312156200024e57600080fd5b81516001600160a01b03811681146200026657600080fd5b9392505050565b608051611c3f620002a560003960008181610291015281816106d301528181610c0a01528181610ffe01526111ce0152611c3f6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80637bb7bed1116100de578063bf9befb111610097578063dc01f60d11610071578063dc01f60d146103d5578063f2fde38b146103f6578063f36c0a7214610409578063fdff9b4d1461041157600080fd5b8063bf9befb114610372578063c89109131461037b578063d4570c1c146103aa57600080fd5b80637bb7bed1146102de5780638456cb59146102f15780638980f11f146102f95780638da5cb5b1461030c5780639c9b2e2114610322578063a765a9571461033557600080fd5b806348e5d9f81161013057806348e5d9f8146101ec5780635c975abb146102365780636eacd3981461024d578063715018a61461028457806372f702f31461028c5780637acb7757146102cb57600080fd5b806310f3ee29146101785780632e17de781461018d57806331279d3d146101a0578063367caa09146101c95780633f4ba83a146101dc57806345b35f56146101e4575b600080fd5b61018b6101863660046117bb565b610434565b005b61018b61019b366004611830565b610506565b6101b36101ae36600461187b565b610513565b6040516101c0919061198e565b60405180910390f35b61018b6101d73660046117bb565b610526565b61018b6105f2565b6101b3610604565b61021b6101fa3660046119a1565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101c0565b60005460ff165b60405190151581526020016101c0565b61027661025b3660046119a1565b6001600160a01b031660009081526004602052604090205490565b6040519081526020016101c0565b61018b61066f565b6102b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c0565b61018b6102d93660046119bc565b610681565b6102b36102ec366004611830565b61068f565b61018b6106b9565b61018b6103073660046119e8565b6106c9565b60005461010090046001600160a01b03166102b3565b61018b6103303660046119a1565b6107cb565b610276610343366004611a12565b6001600160a01b0391821660009081526004602090815260408083209390941682526003909201909152205490565b61027660015481565b61021b6103893660046119a1565b60046020526000908152604090208054600182015460029092015490919083565b6102766103b8366004611a12565b600560209081526000928352604080842090915290825290205481565b6103e86103e33660046119a1565b6108e5565b6040516101c0929190611a3c565b61018b6104043660046119a1565b610a7e565b61018b610af9565b61023d61041f3660046119a1565b60066020526000908152604090205460ff1681565b61043c610b01565b8060005b8181101561050057600084848381811061045c5761045c611a9c565b905060200201602081019061047191906119a1565b6001600160a01b0316141561049957604051639fabe1c160e01b815260040160405180910390fd5b6000600660008686858181106104b1576104b1611a9c565b90506020020160208101906104c691906119a1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806104f881611ac8565b915050610440565b50505050565b6105108133610b61565b50565b606061051f8383610ca7565b9392505050565b61052e610b01565b8060005b8181101561050057600084848381811061054e5761054e611a9c565b905060200201602081019061056391906119a1565b6001600160a01b0316141561058b57604051639fabe1c160e01b815260040160405180910390fd5b6001600660008686858181106105a3576105a3611a9c565b90506020020160208101906105b891906119a1565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806105ea81611ac8565b915050610532565b6105fa610b01565b610602610ee1565b565b606061066a33600280548060200260200160405190810160405280929190818152602001828054801561066057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610642575b5050505050610ca7565b905090565b610677610b01565b6106026000610f33565b61068b8282610f8c565b5050565b6002818154811061069f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6106c1610b01565b6106026110ab565b6106d1610b01565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561072457604051630aeb29ff60e01b815260040160405180910390fd5b6001600160a01b0382166000908152600360205260409020600101541561075e57604051637e2e4d1360e01b815260040160405180910390fd5b6000546107849061010090046001600160a01b03166001600160a01b03841690836110e8565b816001600160a01b03167f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28826040516107bf91815260200190565b60405180910390a25050565b6001600160a01b0381166107f25760405163eeddf6ab60e01b815260040160405180910390fd5b3360009081526006602052604090205460ff1661082257604051630deda90360e41b815260040160405180910390fd5b60005b60025481101561089257816001600160a01b03166002828154811061084c5761084c611a9c565b6000918252602090912001546001600160a01b0316141561088057604051637e2e4d1360e01b815260040160405180910390fd5b8061088a81611ac8565b915050610825565b50600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0392909216919091179055565b606080600060028054905067ffffffffffffffff81111561090857610908611865565b604051908082528060200260200182016040528015610931578160200160208202803683370190505b50905060005b600254811015610a14576e111b0ec57e6499a1f4b1014d3f6d5960321b610985866002848154811061096b5761096b611a9c565b6000918252602090912001546001600160a01b0316611150565b61098f9190611ae3565b60056000600284815481106109a6576109a6611a9c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a168252929092529020546109e59190611b05565b8282815181106109f7576109f7611a9c565b602090810291909101015280610a0c81611ac8565b915050610937565b5060028181805480602002602001604051908101604052809291908181526020018280548015610a6d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a4f575b505050505091509250925050915091565b610a86610b01565b6001600160a01b038116610af05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61051081610f33565b6106026111cc565b6000546001600160a01b036101009091041633146106025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ae7565b6001600160a01b03811660009081526004602052604090208054831180610b86575082155b15610ba45760405163162908e360e11b815260040160405180910390fd5b610bac6111cc565b60005b600254811015610bfc57610bea8360028381548110610bd057610bd0611a9c565b6000918252602090912001546001600160a01b031661136f565b80610bf481611ac8565b915050610baf565b50610c316001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683856110e8565b82816000016000828254610c459190611b1d565b925050819055508260016000828254610c5e9190611b1d565b90915550506040518381526001600160a01b038316907f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd906020015b60405180910390a2505050565b6060610cb1611492565b815167ffffffffffffffff811115610ccb57610ccb611865565b604051908082528060200260200182016040528015610cf4578160200160208202803683370190505b50905060005b8251811015610eda576000838281518110610d1757610d17611a9c565b60200260200101519050600060036000836001600160a01b03166001600160a01b031681526020019081526020016000209050610d526111cc565b610d5c868361136f565b6001600160a01b038083166000908152600560209081526040808320938a168352929052205415610ec5576001600160a01b038083166000908152600560209081526040808320938a16835292905220548451859085908110610dc157610dc1611a9c565b6020908102919091018101919091526001600160a01b038084166000818152600584526040808220938b16825292909352912054610e01919088906110e8565b6001600160a01b038083166000908152600560209081526040808320938a16835292905290812054825490918391610e3a908490611b1d565b90915550506001600160a01b038281166000818152600560209081526040808320948b16808452948252918290205491519182529192917f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e910160405180910390a36001600160a01b038083166000908152600560209081526040808320938a168352929052908120555b50508080610ed290611ac8565b915050610cfa565b5092915050565b610ee96114d8565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b610f94611492565b81610fb25760405163162908e360e11b815260040160405180910390fd5b610fba6111cc565b60005b600254811015610ff057610fde8260028381548110610bd057610bd0611a9c565b80610fe881611ac8565b915050610fbd565b506110266001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611521565b6001600160a01b0381166000908152600460205260408120805490918491839190611052908490611b05565b92505081905550826001600082825461106b9190611b05565b90915550506040518381526001600160a01b038316907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90602001610c9a565b6110b3611492565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f163390565b6040516001600160a01b03831660248201526044810182905261114b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611559565b505050565b6001600160a01b038082166000818152600360208181526040808420815160608101835281548152600182015481850152600290910154818301908152968916855260048352818520805496865293840190925283205494519294909391926111b99190611b1d565b6111c39190611b34565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370bb45b36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561122757600080fd5b505af115801561123b573d6000803e3d6000fd5b5050505060005b6002548110156105105760006002828154811061126157611261611a9c565b6000918252602090912001546001546001600160a01b0390911691501561135c576001600160a01b03811660008181526003602052604080822090516370a0823160e01b81523060048201529092906370a0823190602401602060405180830381865afa1580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fa9190611b53565b825490915060009061130c9083611b1d565b4260018086019190915554909150611336826e111b0ec57e6499a1f4b1014d3f6d5960321b611b34565b6113409190611ae3565b8360020160008282546113539190611b05565b90915550505090555b508061136781611ac8565b915050611242565b6001600160a01b038083166000908152600460209081526040808320938516835260038252918290208251606081018452815481526001808301549382019390935260029091015492810192909252820154158015906113cf5750815415155b156114665781546001600160a01b03841660009081526003840160205260409081902054908301516e111b0ec57e6499a1f4b1014d3f6d5960321b929161141591611b1d565b61141f9190611b34565b6114299190611ae3565b6001600160a01b03808516600090815260056020908152604080832093891683529290529081208054909190611460908490611b05565b90915550505b6040908101516001600160a01b0390931660009081526003830160205220919091554260019091015550565b60005460ff16156106025760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610ae7565b60005460ff166106025760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ae7565b6040516001600160a01b03808516602483015283166044820152606481018290526105009085906323b872dd60e01b90608401611114565b60006115ae826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661162e9092919063ffffffff16565b90508051600014806115cf5750808060200190518101906115cf9190611b6c565b61114b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ae7565b606061163d8484600085611645565b949350505050565b6060824710156116a65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ae7565b600080866001600160a01b031685876040516116c29190611bba565b60006040518083038185875af1925050503d80600081146116ff576040519150601f19603f3d011682016040523d82523d6000602084013e611704565b606091505b509150915061171587838387611720565b979650505050505050565b6060831561178c578251611785576001600160a01b0385163b6117855760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ae7565b508161163d565b61163d83838151156117a15781518083602001fd5b8060405162461bcd60e51b8152600401610ae79190611bd6565b600080602083850312156117ce57600080fd5b823567ffffffffffffffff808211156117e657600080fd5b818501915085601f8301126117fa57600080fd5b81358181111561180957600080fd5b8660208260051b850101111561181e57600080fd5b60209290920196919550909350505050565b60006020828403121561184257600080fd5b5035919050565b80356001600160a01b038116811461186057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561188e57600080fd5b61189783611849565b915060208084013567ffffffffffffffff808211156118b557600080fd5b818601915086601f8301126118c957600080fd5b8135818111156118db576118db611865565b8060051b604051601f19603f8301168101818110858211171561190057611900611865565b60405291825284820192508381018501918983111561191e57600080fd5b938501935b828510156119435761193485611849565b84529385019392850192611923565b8096505050505050509250929050565b600081518084526020808501945080840160005b8381101561198357815187529582019590820190600101611967565b509495945050505050565b60208152600061051f6020830184611953565b6000602082840312156119b357600080fd5b61051f82611849565b600080604083850312156119cf57600080fd5b823591506119df60208401611849565b90509250929050565b600080604083850312156119fb57600080fd5b611a0483611849565b946020939093013593505050565b60008060408385031215611a2557600080fd5b611a2e83611849565b91506119df60208401611849565b604080825283519082018190526000906020906060840190828701845b82811015611a7e5781516001600160a01b031684529284019290840190600101611a59565b50505083810382850152611a928186611953565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611adc57611adc611ab2565b5060010190565b600082611b0057634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611b1857611b18611ab2565b500190565b600082821015611b2f57611b2f611ab2565b500390565b6000816000190483118215151615611b4e57611b4e611ab2565b500290565b600060208284031215611b6557600080fd5b5051919050565b600060208284031215611b7e57600080fd5b8151801515811461051f57600080fd5b60005b83811015611ba9578181015183820152602001611b91565b838111156105005750506000910152565b60008251611bcc818460208701611b8e565b9190910192915050565b6020815260008251806020840152611bf5816040850160208701611b8e565b601f01601f1916919091016040019291505056fea264697066735822122087e14479dbb2d67e7700b01d0f7b9d95bac26d3f30fde2fe80e0c01e990f65f664736f6c634300080c0033a2646970667358221220703b7fb79ad36a7829e3ab734ae0bbe7d2df89d9dd4ca583c4274b999cce5e9064736f6c634300080c0033",
  "deployedSourceMap": "396:1340:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;652:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;887:846;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1166:32:15;;;1148:51;;1136:2;1121:18;887:846:10;1002:203:15;697:57:10;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;697:57:10;;;480:106;;;:::i;:::-;;;1356:25:15;;;1344:2;1329:18;480:106:10;1210:177:15;761:36:10;;;;;1824:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2074:198;;;;;;:::i;:::-;;:::i;652:38:10:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;887:846::-;-1:-1:-1;;;;;990:24:10;;;955:14;990:24;;;:13;:24;;;;;;955:14;;990:24;:38;982:67;;;;-1:-1:-1;;;982:67:10;;1979:2:15;982:67:10;;;1961:21:15;2018:2;1998:18;;;1991:30;-1:-1:-1;;;2037:18:15;;;2030:46;2093:18;;982:67:10;;;;;;;;;1306:11;-1:-1:-1;;;;;1262:55:10;1273:9;-1:-1:-1;;;;;1262:38:10;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1262:55:10;;1254:78;;;;-1:-1:-1;;;1254:78:10;;2580:2:15;1254:78:10;;;2562:21:15;2619:2;2599:18;;;2592:30;-1:-1:-1;;;2638:18:15;;;2631:40;2688:18;;1254:78:10;2378:334:15;1254:78:10;1370:21;;;-1:-1:-1;;;;;1166:32:15;;1370:21:10;;;1148:51:15;1343:24:10;;1121:18:15;1370:21:10;;;-1:-1:-1;;1370:21:10;;;;;;;;;1401:30;;1370:21;;-1:-1:-1;1401:30:10;;:16;;1370:21;1401:30;;;;:::i;:::-;-1:-1:-1;1457:22:10;;;;;;1506:38;;1457:22;;1506:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1489:56:10;-1:-1:-1;1556:23:10;1563:16;;1556:23;:::i;:::-;-1:-1:-1;;;;;1590:24:10;;;;;;;:13;:24;;;;;:33;;;;;-1:-1:-1;;;;;;1590:33:10;;;;;;;1634:34;1669:7;1247::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;1669:7:10;1634:43;;-1:-1:-1;;;;;;1634:43:10;;;;;;;-1:-1:-1;;;;;1166:32:15;;;1634:43:10;;;1148:51:15;1121:18;;1634:43:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1693:33:10;;-1:-1:-1;;;;;1693:33:10;;;-1:-1:-1;1707:10:10;;-1:-1:-1;1693:33:10;;;;;971:762;;887:846;;;:::o;480:106::-;546:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;536:50;;;;;;480:106;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;2919:2:15;2154:73:0::1;::::0;::::1;2901:21:15::0;2958:2;2938:18;;;2931:30;2997:34;2977:18;;;2970:62;-1:-1:-1;;;3048:18:15;;;3041:36;3094:19;;2154:73:0::1;2717:402:15::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:8;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3326:2:15;1414:68:0;;;3308:21:15;;;3345:18;;;3338:30;3404:34;3384:18;;;3377:62;3456:18;;1414:68:0;3124:356:15;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:595:15;124:4;153:2;182;171:9;164:21;214:6;208:13;257:6;252:2;241:9;237:18;230:34;282:1;292:140;306:6;303:1;300:13;292:140;;;401:14;;;397:23;;391:30;367:17;;;386:2;363:26;356:66;321:10;;292:140;;;450:6;447:1;444:13;441:91;;;520:1;515:2;506:6;495:9;491:22;487:31;480:42;441:91;-1:-1:-1;593:2:15;572:15;-1:-1:-1;;568:29:15;553:45;;;;600:2;549:54;;14:595;-1:-1:-1;;;14:595:15:o;614:131::-;-1:-1:-1;;;;;689:31:15;;679:42;;669:70;;735:1;732;725:12;750:247;809:6;862:2;850:9;841:7;837:23;833:32;830:52;;;878:1;875;868:12;830:52;917:9;904:23;936:31;961:5;936:31;:::i;:::-;986:5;750:247;-1:-1:-1;;;750:247:15:o;1392:380::-;1471:1;1467:12;;;;1514;;;1535:61;;1589:4;1581:6;1577:17;1567:27;;1535:61;1642:2;1634:6;1631:14;1611:18;1608:38;1605:161;;;1688:10;1683:3;1679:20;1676:1;1669:31;1723:4;1720:1;1713:15;1751:4;1748:1;1741:15;1605:161;;1392:380;;;:::o;2122:251::-;2192:6;2245:2;2233:9;2224:7;2220:23;2216:32;2213:52;;;2261:1;2258;2251:12;2213:52;2293:9;2287:16;2312:31;2337:5;2312:31;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    396,
    1736
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B15EFAC GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x5B15EFAC EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC90EB65 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1E32166B EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x37B44560 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x420C6A2C EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2 JUMP JUMPDEST PUSH2 0xBE PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x731 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2 JUMP JUMPDEST PUSH2 0xBE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBE JUMP JUMPDEST PUSH2 0x144 PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x731 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x177 SWAP1 PUSH2 0x755 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A3 SWAP1 PUSH2 0x755 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x25A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1053149150511657D111541313D65151 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD81FA63 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x790 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x24A72B20A624A22FAB23 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD SWAP1 SWAP2 POP PUSH2 0x366 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x5EA JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH2 0x37C SWAP1 PUSH2 0x66E JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x39C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 POP PUSH2 0x3AB PUSH1 0x1 PUSH1 0x0 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH4 0xF2FDE38B PUSH2 0x3F0 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0xCA0CA08D677E6066BA2A607057B454A3D31F555FEBBB6FF46B273EE02704F080 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x495 PUSH1 0x20 DUP3 ADD PUSH2 0x66E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x540 JUMP JUMPDEST PUSH2 0x4C5 PUSH1 0x0 PUSH2 0x59A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x540 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x251 JUMP JUMPDEST PUSH2 0x53D DUP2 PUSH2 0x59A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x5F6 SWAP1 PUSH2 0x755 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x618 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x65E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x631 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x65E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x65E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x65E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x643 JUMP JUMPDEST POP PUSH2 0x66A SWAP3 SWAP2 POP PUSH2 0x6B2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1EE4 DUP1 PUSH3 0x7AE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x688 SWAP1 PUSH2 0x755 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x698 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x53D SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x6B3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x74E DUP2 PUSH2 0x71C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x769 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x78A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x74E DUP2 PUSH2 0x71C JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x27 CALLER PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC90EB65 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH3 0x97 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH3 0x15F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH3 0xB1 SWAP2 SWAP1 PUSH3 0x23B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xDB JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FABE1C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE POP PUSH3 0x26D SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x1B5 JUMPI PUSH3 0x1B5 PUSH3 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1E0 JUMPI PUSH3 0x1E0 PUSH3 0x149 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x21D JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1FE JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C3F PUSH3 0x2A5 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x291 ADD MSTORE DUP2 DUP2 PUSH2 0x6D3 ADD MSTORE DUP2 DUP2 PUSH2 0xC0A ADD MSTORE DUP2 DUP2 PUSH2 0xFFE ADD MSTORE PUSH2 0x11CE ADD MSTORE PUSH2 0x1C3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BB7BED1 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBF9BEFB1 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDC01F60D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDC01F60D EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xF36C0A72 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xFDFF9B4D EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF9BEFB1 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xC8910913 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xD4570C1C EQ PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BB7BED1 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x9C9B2E21 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xA765A957 EQ PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x48E5D9F8 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x48E5D9F8 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x6EACD398 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x7ACB7757 EQ PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10F3EE29 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x31279D3D EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x367CAA09 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x45B35F56 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x604 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x66F JUMP JUMPDEST PUSH2 0x2B3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BC JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST PUSH2 0x2B3 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0x19E8 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x276 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x276 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x3B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x18B PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x18B PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x43C PUSH2 0xB01 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45C PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FABE1C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x4B1 JUMPI PUSH2 0x4B1 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x4F8 DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x440 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x510 DUP2 CALLER PUSH2 0xB61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x51F DUP4 DUP4 PUSH2 0xCA7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x52E PUSH2 0xB01 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x54E JUMPI PUSH2 0x54E PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x58B JUMPI PUSH1 0x40 MLOAD PUSH4 0x9FABE1C1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x5A3 JUMPI PUSH2 0x5A3 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0x19A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x5EA DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x532 JUMP JUMPDEST PUSH2 0x5FA PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x602 PUSH2 0xEE1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x66A CALLER PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x642 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0xCA7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x677 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x602 PUSH1 0x0 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x68B DUP3 DUP3 PUSH2 0xF8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x6C1 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x602 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x6D1 PUSH2 0xB01 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAEB29FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x75E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E2E4D13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x784 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 PUSH2 0x10E8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7BF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEEDDF6AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDEDA903 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x892 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84C PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E2E4D13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x88A DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x825 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x908 JUMPI PUSH2 0x908 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x931 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xA14 JUMPI PUSH15 0x111B0EC57E6499A1F4B1014D3F6D59 PUSH1 0x32 SHL PUSH2 0x985 DUP7 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x96B JUMPI PUSH2 0x96B PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x98F SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x9A6 JUMPI PUSH2 0x9A6 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP11 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9F7 JUMPI PUSH2 0x9F7 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xA0C DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x937 JUMP JUMPDEST POP PUSH1 0x2 DUP2 DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA4F JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0xA86 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x510 DUP2 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x602 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 GT DUP1 PUSH2 0xB86 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAC PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xBFC JUMPI PUSH2 0xBEA DUP4 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBD0 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x136F JUMP JUMPDEST DUP1 PUSH2 0xBF4 DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAF JUMP JUMPDEST POP PUSH2 0xC31 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP6 PUSH2 0x10E8 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC45 SWAP2 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC5E SWAP2 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCB1 PUSH2 0x1492 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCB JUMPI PUSH2 0xCCB PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCF4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD17 JUMPI PUSH2 0xD17 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0xD52 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0xD5C DUP7 DUP4 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP5 MLOAD DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0xDC1 JUMPI PUSH2 0xDC1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 DUP12 AND DUP3 MSTORE SWAP3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xE01 SWAP2 SWAP1 DUP9 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD DUP3 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0xE3A SWAP1 DUP5 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP12 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x540798DF468D7B23D11F156FDB954CB19AD414D150722A7B6D55BA369DEA792E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMPDEST POP POP DUP1 DUP1 PUSH2 0xED2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCFA JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE9 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF94 PUSH2 0x1492 JUMP JUMPDEST DUP2 PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x162908E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBA PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xFF0 JUMPI PUSH2 0xFDE DUP3 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBD0 PUSH2 0x1A9C JUMP JUMPDEST DUP1 PUSH2 0xFE8 DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFBD JUMP JUMPDEST POP PUSH2 0x1026 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP5 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1052 SWAP1 DUP5 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A SWAP1 PUSH1 0x20 ADD PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x10B3 PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF16 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x114B SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1559 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD DUP2 DUP4 ADD SWAP1 DUP2 MSTORE SWAP7 DUP10 AND DUP6 MSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD SWAP7 DUP7 MSTORE SWAP4 DUP5 ADD SWAP1 SWAP3 MSTORE DUP4 KECCAK256 SLOAD SWAP5 MLOAD SWAP3 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 PUSH2 0x11B9 SWAP2 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0x11C3 SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70BB45B3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x123B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1261 JUMPI PUSH2 0x1261 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP ISZERO PUSH2 0x135C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FA SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x130C SWAP1 DUP4 PUSH2 0x1B1D JUMP JUMPDEST TIMESTAMP PUSH1 0x1 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD SWAP1 SWAP2 POP PUSH2 0x1336 DUP3 PUSH15 0x111B0EC57E6499A1F4B1014D3F6D59 PUSH1 0x32 SHL PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x1340 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1353 SWAP2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP SWAP1 SSTORE JUMPDEST POP DUP1 PUSH2 0x1367 DUP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x13CF JUMPI POP DUP2 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1466 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 DUP4 ADD MLOAD PUSH15 0x111B0EC57E6499A1F4B1014D3F6D59 PUSH1 0x32 SHL SWAP3 SWAP2 PUSH2 0x1415 SWAP2 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x1B34 JUMP JUMPDEST PUSH2 0x1429 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1460 SWAP1 DUP5 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x602 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x500 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x162E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x15CF JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x163D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1645 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x16A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x16C2 SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1704 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1715 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1720 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x178C JUMPI DUP3 MLOAD PUSH2 0x1785 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1785 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAE7 JUMP JUMPDEST POP DUP2 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x163D DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x17A1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE7 SWAP2 SWAP1 PUSH2 0x1BD6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1897 DUP4 PUSH2 0x1849 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18DB JUMPI PUSH2 0x18DB PUSH2 0x1865 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x1900 JUMPI PUSH2 0x1900 PUSH2 0x1865 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1934 DUP6 PUSH2 0x1849 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x1923 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1983 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1967 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x51F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51F DUP3 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x19DF PUSH1 0x20 DUP5 ADD PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A04 DUP4 PUSH2 0x1849 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2E DUP4 PUSH2 0x1849 JUMP JUMPDEST SWAP2 POP PUSH2 0x19DF PUSH1 0x20 DUP5 ADD PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A7E JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1A59 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1A92 DUP2 DUP7 PUSH2 0x1953 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1ADC JUMPI PUSH2 0x1ADC PUSH2 0x1AB2 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B00 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B18 JUMPI PUSH2 0x1B18 PUSH2 0x1AB2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B2F JUMPI PUSH2 0x1B2F PUSH2 0x1AB2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B4E JUMPI PUSH2 0x1B4E PUSH2 0x1AB2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B91 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x500 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1BCC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1BF5 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B8E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xE1 DIFFICULTY PUSH26 0xDBB2D67E7700B01D0F7B9D95BAC26D3F30FDE2FE80E0C01E990F PUSH6 0xF664736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x3B7FB79AD36A7829E3AB734AE0BBE7D2DF DUP10 0xD9 0xDD 0x4C 0xA5 DUP4 0xC4 0x27 0x4B SWAP10 SWAP13 0xCE 0x5E SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5B15EFAC"
    },
    "38": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5B15EFAC"
    },
    "49": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x115"
    },
    "53": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "60": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C"
    },
    "64": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "71": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x146"
    },
    "75": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x157"
    },
    "86": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "90": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "REVERT",
      "path": "10"
    },
    "91": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "92": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "93": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC90EB65"
    },
    "98": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "103": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "104": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1E32166B"
    },
    "109": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAB"
    },
    "113": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x37B44560"
    },
    "120": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD6"
    },
    "124": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x420C6A2C"
    },
    "131": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFF"
    },
    "135": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        396,
        1736
      ],
      "op": "REVERT",
      "path": "10"
    },
    "141": {
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "142": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x95"
    },
    "145": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16A"
    },
    "148": {
      "fn": null,
      "jump": "i",
      "offset": [
        652,
        690
      ],
      "op": "JUMP",
      "path": "10"
    },
    "149": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "150": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "152": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "153": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2"
    },
    "156": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "157": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6C7"
    },
    "161": {
      "fn": null,
      "jump": "i",
      "offset": [
        652,
        690
      ],
      "op": "JUMP",
      "path": "10"
    },
    "162": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "165": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "166": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "167": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "168": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "SUB",
      "path": "10"
    },
    "169": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        652,
        690
      ],
      "op": "RETURN",
      "path": "10"
    },
    "171": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "172": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBE"
    },
    "175": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB9"
    },
    "178": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "179": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "181": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x731"
    },
    "184": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        887,
        1733
      ],
      "op": "JUMP",
      "path": "10"
    },
    "185": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "186": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F8"
    },
    "189": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        887,
        1733
      ],
      "op": "JUMP",
      "path": "10"
    },
    "190": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "191": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "193": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "200": {
      "op": "SHL"
    },
    "201": {
      "op": "SUB"
    },
    "202": {
      "op": "SWAP1"
    },
    "203": {
      "op": "SWAP2"
    },
    "204": {
      "op": "AND"
    },
    "205": {
      "op": "DUP2"
    },
    "206": {
      "op": "MSTORE"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "209": {
      "op": "ADD"
    },
    "210": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2"
    },
    "213": {
      "op": "JUMP"
    },
    "214": {
      "offset": [
        697,
        754
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "215": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBE"
    },
    "218": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE4"
    },
    "221": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "222": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "224": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x731"
    },
    "227": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        697,
        754
      ],
      "op": "JUMP",
      "path": "10"
    },
    "228": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "229": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "231": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "233": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "234": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "236": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "237": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "DUP2",
      "path": "10"
    },
    "238": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "239": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "241": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "242": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "243": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "250": {
      "op": "SHL"
    },
    "251": {
      "op": "SUB"
    },
    "252": {
      "offset": [
        697,
        754
      ],
      "op": "AND",
      "path": "10"
    },
    "253": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "DUP2",
      "path": "10"
    },
    "254": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        697,
        754
      ],
      "op": "JUMP",
      "path": "10"
    },
    "255": {
      "offset": [
        480,
        586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "256": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        480,
        586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x107"
    },
    "259": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        480,
        586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x486"
    },
    "262": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        480,
        586
      ],
      "op": "JUMP",
      "path": "10"
    },
    "263": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        480,
        586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "264": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        480,
        586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "266": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        480,
        586
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "267": {
      "op": "SWAP1"
    },
    "268": {
      "op": "DUP2"
    },
    "269": {
      "op": "MSTORE"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "272": {
      "op": "ADD"
    },
    "273": {
      "offset": [
        480,
        586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2"
    },
    "276": {
      "op": "JUMP"
    },
    "277": {
      "offset": [
        761,
        797
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "278": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        761,
        797
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBE"
    },
    "281": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        761,
        797
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "314": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        761,
        797
      ],
      "op": "DUP2",
      "path": "10"
    },
    "315": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        761,
        797
      ],
      "op": "JUMP",
      "path": "10"
    },
    "316": {
      "op": "JUMPDEST"
    },
    "317": {
      "op": "PUSH2",
      "value": "0x144"
    },
    "320": {
      "op": "PUSH2",
      "value": "0x4B3"
    },
    "323": {
      "jump": "i",
      "op": "JUMP"
    },
    "324": {
      "op": "JUMPDEST"
    },
    "325": {
      "op": "STOP"
    },
    "326": {
      "op": "JUMPDEST"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "329": {
      "op": "SLOAD"
    },
    "330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "336": {
      "op": "SHL"
    },
    "337": {
      "op": "SUB"
    },
    "338": {
      "op": "AND"
    },
    "339": {
      "op": "PUSH2",
      "value": "0xBE"
    },
    "342": {
      "op": "JUMP"
    },
    "343": {
      "op": "JUMPDEST"
    },
    "344": {
      "op": "PUSH2",
      "value": "0x144"
    },
    "347": {
      "op": "PUSH2",
      "value": "0x165"
    },
    "350": {
      "op": "CALLDATASIZE"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "353": {
      "op": "PUSH2",
      "value": "0x731"
    },
    "356": {
      "jump": "i",
      "op": "JUMP"
    },
    "357": {
      "op": "JUMPDEST"
    },
    "358": {
      "op": "PUSH2",
      "value": "0x4C7"
    },
    "361": {
      "jump": "i",
      "op": "JUMP"
    },
    "362": {
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "363": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "365": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "366": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "367": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x177"
    },
    "370": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "371": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x755"
    },
    "374": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        652,
        690
      ],
      "op": "JUMP",
      "path": "10"
    },
    "375": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "376": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "377": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "379": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "380": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "382": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "383": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "384": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DIV",
      "path": "10"
    },
    "385": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MUL",
      "path": "10"
    },
    "386": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "388": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "389": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "391": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "392": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "393": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP2",
      "path": "10"
    },
    "394": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "395": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "397": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "398": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "399": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "400": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "401": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "402": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP2",
      "path": "10"
    },
    "403": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP2",
      "path": "10"
    },
    "404": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "405": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "407": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "408": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP3",
      "path": "10"
    },
    "409": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "410": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "411": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A3"
    },
    "414": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "415": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x755"
    },
    "418": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        652,
        690
      ],
      "op": "JUMP",
      "path": "10"
    },
    "419": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "420": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "421": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "422": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F0"
    },
    "425": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "426": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "427": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "429": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "LT",
      "path": "10"
    },
    "430": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C5"
    },
    "433": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "434": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "437": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "438": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP4",
      "path": "10"
    },
    "439": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "440": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DIV",
      "path": "10"
    },
    "441": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MUL",
      "path": "10"
    },
    "442": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP4",
      "path": "10"
    },
    "443": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "444": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "445": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "447": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "448": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "449": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F0"
    },
    "452": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMP",
      "path": "10"
    },
    "453": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "454": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP3",
      "path": "10"
    },
    "455": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "456": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "457": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "458": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "460": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "461": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "463": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "465": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "466": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "467": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "468": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP2",
      "path": "10"
    },
    "469": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "470": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP2",
      "path": "10"
    },
    "471": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "472": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "473": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "475": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "476": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "477": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "479": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "480": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP1",
      "path": "10"
    },
    "481": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP4",
      "path": "10"
    },
    "482": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "GT",
      "path": "10"
    },
    "483": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D3"
    },
    "486": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "487": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP3",
      "path": "10"
    },
    "488": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "489": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SUB",
      "path": "10"
    },
    "490": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "492": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "AND",
      "path": "10"
    },
    "493": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP3",
      "path": "10"
    },
    "494": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "ADD",
      "path": "10"
    },
    "495": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "496": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "497": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "POP",
      "path": "10"
    },
    "498": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "POP",
      "path": "10"
    },
    "499": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "POP",
      "path": "10"
    },
    "500": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "POP",
      "path": "10"
    },
    "501": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "POP",
      "path": "10"
    },
    "502": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        652,
        690
      ],
      "op": "DUP2",
      "path": "10"
    },
    "503": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "o",
      "offset": [
        652,
        690
      ],
      "op": "JUMP",
      "path": "10"
    },
    "504": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 0
    },
    "514": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "DUP2",
      "path": "10"
    },
    "515": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "AND",
      "path": "10"
    },
    "516": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        955,
        969
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "518": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "519": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "DUP2",
      "path": "10"
    },
    "520": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "521": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1003
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "523": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "525": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "526": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "528": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "DUP2",
      "path": "10"
    },
    "529": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "530": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "531": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        955,
        969
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "532": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        955,
        969
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "533": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1014
      ],
      "op": "AND",
      "path": "10"
    },
    "534": {
      "branch": 8,
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        990,
        1028
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "535": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25A"
    },
    "538": {
      "branch": 8,
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "539": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "541": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "DUP2",
      "path": "10"
    },
    "550": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "553": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "555": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "DUP3",
      "path": "10"
    },
    "556": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "ADD",
      "path": "10"
    },
    "557": {
      "op": "MSTORE"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "562": {
      "op": "DUP3"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "op": "MSTORE"
    },
    "565": {
      "op": "PUSH16",
      "value": "0x1053149150511657D111541313D65151"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "584": {
      "op": "SHL"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "587": {
      "op": "DUP3"
    },
    "588": {
      "op": "ADD"
    },
    "589": {
      "op": "MSTORE"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "592": {
      "op": "ADD"
    },
    "593": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "594": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "596": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "597": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "DUP1",
      "path": "10"
    },
    "598": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "599": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "SUB",
      "path": "10"
    },
    "600": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "601": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "602": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        982,
        1049
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "603": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1306,
        1317
      ],
      "op": "PUSH32",
      "path": "10",
      "statement": 1,
      "value": "0x0"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1317
      ],
      "op": "AND",
      "path": "10"
    },
    "645": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1273,
        1282
      ],
      "op": "DUP3",
      "path": "10"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "652": {
      "op": "SHL"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1300
      ],
      "op": "AND",
      "path": "10"
    },
    "655": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1300
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD81FA63"
    },
    "660": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "662": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "663": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP2",
      "path": "10"
    },
    "664": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "669": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "AND",
      "path": "10"
    },
    "670": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "672": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "SHL",
      "path": "10"
    },
    "673": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP2",
      "path": "10"
    },
    "674": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "675": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "677": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "ADD",
      "path": "10"
    },
    "678": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "680": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "682": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "683": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP1",
      "path": "10"
    },
    "684": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP4",
      "path": "10"
    },
    "685": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "SUB",
      "path": "10"
    },
    "686": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP2",
      "path": "10"
    },
    "687": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP7",
      "path": "10"
    },
    "688": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "GAS",
      "path": "10"
    },
    "689": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "690": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "691": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP1",
      "path": "10"
    },
    "692": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "693": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C2"
    },
    "696": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "697": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "698": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "700": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP1",
      "path": "10"
    },
    "701": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "702": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "703": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "705": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "REVERT",
      "path": "10"
    },
    "706": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "707": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "POP",
      "path": "10"
    },
    "708": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "POP",
      "path": "10"
    },
    "709": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "POP",
      "path": "10"
    },
    "710": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "POP",
      "path": "10"
    },
    "711": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "713": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "714": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "715": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "717": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "NOT",
      "path": "10"
    },
    "718": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "720": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP3",
      "path": "10"
    },
    "721": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "ADD",
      "path": "10"
    },
    "722": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "AND",
      "path": "10"
    },
    "723": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP3",
      "path": "10"
    },
    "724": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "ADD",
      "path": "10"
    },
    "725": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP1",
      "path": "10"
    },
    "726": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "728": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "729": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "POP",
      "path": "10"
    },
    "730": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "DUP2",
      "path": "10"
    },
    "731": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "ADD",
      "path": "10"
    },
    "732": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "733": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E6"
    },
    "736": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "737": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "738": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x790"
    },
    "741": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        1262,
        1302
      ],
      "op": "JUMP",
      "path": "10"
    },
    "742": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1302
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "SUB"
    },
    "751": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1317
      ],
      "op": "AND",
      "path": "10"
    },
    "752": {
      "branch": 9,
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1262,
        1317
      ],
      "op": "EQ",
      "path": "10"
    },
    "753": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x329"
    },
    "756": {
      "branch": 9,
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "757": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "759": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "760": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "DUP2",
      "path": "10"
    },
    "768": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "771": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "773": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "DUP3",
      "path": "10"
    },
    "774": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "ADD",
      "path": "10"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH10",
      "value": "0x24A72B20A624A22FAB23"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "799": {
      "op": "DUP3"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "804": {
      "op": "ADD"
    },
    "805": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x251"
    },
    "808": {
      "op": "JUMP"
    },
    "809": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1254,
        1332
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "810": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "812": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "DUP1",
      "path": "10"
    },
    "813": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "op": "DUP5"
    },
    "823": {
      "op": "AND"
    },
    "824": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "826": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "DUP3",
      "path": "10"
    },
    "827": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "ADD",
      "path": "10"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1343,
        1367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "831": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1343,
        1367
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "835": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "DUP1",
      "path": "10"
    },
    "836": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "839": {
      "op": "NOT"
    },
    "840": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "DUP2",
      "path": "10"
    },
    "841": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "DUP5",
      "path": "10"
    },
    "842": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "SUB",
      "path": "10"
    },
    "843": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "ADD",
      "path": "10"
    },
    "844": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "DUP2",
      "path": "10"
    },
    "845": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "846": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "847": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "848": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "849": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 2
    },
    "850": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "851": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "852": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "853": {
      "op": "POP"
    },
    "854": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x366"
    },
    "857": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "858": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1417
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "860": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1417
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "861": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1370,
        1391
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "863": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "DUP5",
      "path": "10"
    },
    "864": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "ADD",
      "path": "10"
    },
    "865": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "866": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5EA"
    },
    "869": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        1401,
        1431
      ],
      "op": "JUMP",
      "path": "10"
    },
    "870": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1401,
        1431
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "DUP1",
      "path": "10"
    },
    "873": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "874": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "876": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "DUP3",
      "path": "10"
    },
    "877": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "ADD",
      "path": "10"
    },
    "878": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "879": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x40"
    },
    "881": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "882": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "DUP2",
      "path": "10"
    },
    "883": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1457,
        1479
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "884": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37C"
    },
    "887": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "888": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66E"
    },
    "891": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        1506,
        1544
      ],
      "op": "JUMP",
      "path": "10"
    },
    "892": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "893": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "DUP2",
      "path": "10"
    },
    "894": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "895": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "897": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "898": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "DUP1",
      "path": "10"
    },
    "899": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "900": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "SUB",
      "path": "10"
    },
    "901": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "902": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "904": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "CREATE2",
      "path": "10"
    },
    "905": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "906": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "POP",
      "path": "10"
    },
    "907": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "DUP1",
      "path": "10"
    },
    "908": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "909": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "DUP1",
      "path": "10"
    },
    "910": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "911": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39C"
    },
    "914": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "915": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "916": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "918": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "DUP1",
      "path": "10"
    },
    "919": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "920": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "921": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "923": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "REVERT",
      "path": "10"
    },
    "924": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1506,
        1544
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "925": {
      "op": "POP"
    },
    "926": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1489,
        1545
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "927": {
      "op": "POP"
    },
    "928": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1556,
        1579
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 4,
      "value": "0x3AB"
    },
    "931": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1563,
        1579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "933": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1563,
        1579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "935": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1556,
        1579
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x67C"
    },
    "938": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        1556,
        1579
      ],
      "op": "JUMP",
      "path": "10"
    },
    "939": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1556,
        1579
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "946": {
      "op": "SHL"
    },
    "947": {
      "op": "SUB"
    },
    "948": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 5
    },
    "949": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "DUP6",
      "path": "10"
    },
    "950": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "AND",
      "path": "10"
    },
    "951": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "953": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "954": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "DUP2",
      "path": "10"
    },
    "955": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "956": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1603
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "958": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "960": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "961": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "963": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "964": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1614
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "965": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "DUP1",
      "path": "10"
    },
    "966": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "967": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "968": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "DUP6",
      "path": "10"
    },
    "969": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "AND",
      "path": "10"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "op": "NOT"
    },
    "979": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "980": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "981": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "AND",
      "path": "10"
    },
    "982": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "DUP3",
      "path": "10"
    },
    "983": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "OR",
      "path": "10"
    },
    "984": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "985": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1590,
        1623
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "986": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1668
      ],
      "op": "PUSH4",
      "path": "10",
      "statement": 6,
      "value": "0xF2FDE38B"
    },
    "991": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1669,
        1676
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F0"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "996": {
      "op": "SLOAD"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "op": "AND"
    },
    "1006": {
      "op": "SWAP1"
    },
    "1007": {
      "op": "JUMP"
    },
    "1008": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1669,
        1676
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1009": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1011": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "op": "NOT"
    },
    "1021": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "1023": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1024": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1025": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "SHL",
      "path": "10"
    },
    "1026": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "AND",
      "path": "10"
    },
    "1027": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1028": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1035": {
      "op": "SHL"
    },
    "1036": {
      "op": "SUB"
    },
    "1037": {
      "op": "SWAP1"
    },
    "1038": {
      "op": "SWAP2"
    },
    "1039": {
      "op": "AND"
    },
    "1040": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1042": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1043": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "ADD",
      "path": "10"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1050": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1052": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1053": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1054": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1055": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "SUB",
      "path": "10"
    },
    "1056": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1057": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1059": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1060": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1061": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "1062": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1063": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1064": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1065": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x431"
    },
    "1068": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1069": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1071": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1072": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1073": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1074": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "POP",
      "path": "10"
    },
    "1075": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "GAS",
      "path": "10"
    },
    "1076": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "CALL",
      "path": "10"
    },
    "1077": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1078": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1079": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1080": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x445"
    },
    "1083": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1084": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1085": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1087": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1088": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "1089": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "1090": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1092": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1093": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1634,
        1677
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "op": "POP"
    },
    "1096": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x40"
    },
    "1098": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "op": "SUB"
    },
    "1107": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1108": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "AND",
      "path": "10"
    },
    "1109": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1707,
        1717
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1112": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1707,
        1717
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1113": {
      "op": "POP"
    },
    "1114": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xCA0CA08D677E6066BA2A607057B454A3D31F555FEBBB6FF46B273EE02704F080"
    },
    "1147": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1148": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1150": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1151": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        1693,
        1726
      ],
      "op": "LOG3",
      "path": "10"
    },
    "1152": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        971,
        1733
      ],
      "op": "POP",
      "path": "10"
    },
    "1153": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        971,
        1733
      ],
      "op": "POP",
      "path": "10"
    },
    "1154": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1155": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1156": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        887,
        1733
      ],
      "op": "POP",
      "path": "10"
    },
    "1157": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "o",
      "offset": [
        887,
        1733
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1158": {
      "offset": [
        480,
        586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1159": {
      "offset": [
        546,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1161": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1162": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x495"
    },
    "1165": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1167": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1168": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "ADD",
      "path": "10"
    },
    "1169": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66E"
    },
    "1172": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "i",
      "offset": [
        546,
        585
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1173": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1174": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1176": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1177": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "ADD",
      "path": "10"
    },
    "1178": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1179": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "SUB",
      "path": "10"
    },
    "1180": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1181": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1182": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1184": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "NOT",
      "path": "10"
    },
    "1185": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1187": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1188": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "ADD",
      "path": "10"
    },
    "1189": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "AND",
      "path": "10"
    },
    "1190": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1192": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1193": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        546,
        585
      ],
      "op": "POP",
      "path": "10"
    },
    "1194": {
      "offset": [
        536,
        586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1195": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        536,
        586
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1196": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        536,
        586
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1197": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        536,
        586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1199": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        536,
        586
      ],
      "op": "ADD",
      "path": "10"
    },
    "1200": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "offset": [
        536,
        586
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1201": {
      "offset": [
        480,
        586
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1202": {
      "fn": "MultiFeeDistributionFactory.deployStaker",
      "jump": "o",
      "offset": [
        480,
        586
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1203": {
      "op": "JUMPDEST"
    },
    "1204": {
      "op": "PUSH2",
      "value": "0x4BB"
    },
    "1207": {
      "op": "PUSH2",
      "value": "0x540"
    },
    "1210": {
      "jump": "i",
      "op": "JUMP"
    },
    "1211": {
      "op": "JUMPDEST"
    },
    "1212": {
      "op": "PUSH2",
      "value": "0x4C5"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1217": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1220": {
      "jump": "i",
      "op": "JUMP"
    },
    "1221": {
      "op": "JUMPDEST"
    },
    "1222": {
      "jump": "o",
      "op": "JUMP"
    },
    "1223": {
      "op": "JUMPDEST"
    },
    "1224": {
      "op": "PUSH2",
      "value": "0x4CF"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x540"
    },
    "1230": {
      "jump": "i",
      "op": "JUMP"
    },
    "1231": {
      "op": "JUMPDEST"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "SUB"
    },
    "1240": {
      "op": "DUP2"
    },
    "1241": {
      "op": "AND"
    },
    "1242": {
      "op": "PUSH2",
      "value": "0x534"
    },
    "1245": {
      "op": "JUMPI"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1248": {
      "op": "MLOAD"
    },
    "1249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "op": "DUP2"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1262": {
      "op": "DUP3"
    },
    "1263": {
      "op": "ADD"
    },
    "1264": {
      "op": "MSTORE"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1269": {
      "op": "DUP3"
    },
    "1270": {
      "op": "ADD"
    },
    "1271": {
      "op": "MSTORE"
    },
    "1272": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1307": {
      "op": "DUP3"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "MSTORE"
    },
    "1310": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1319": {
      "op": "SHL"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1322": {
      "op": "DUP3"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "PUSH2",
      "value": "0x251"
    },
    "1331": {
      "op": "JUMP"
    },
    "1332": {
      "op": "JUMPDEST"
    },
    "1333": {
      "op": "PUSH2",
      "value": "0x53D"
    },
    "1336": {
      "op": "DUP2"
    },
    "1337": {
      "op": "PUSH2",
      "value": "0x59A"
    },
    "1340": {
      "jump": "i",
      "op": "JUMP"
    },
    "1341": {
      "op": "JUMPDEST"
    },
    "1342": {
      "op": "POP"
    },
    "1343": {
      "jump": "o",
      "op": "JUMP"
    },
    "1344": {
      "op": "JUMPDEST"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1347": {
      "op": "SLOAD"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1354": {
      "op": "SHL"
    },
    "1355": {
      "op": "SUB"
    },
    "1356": {
      "op": "AND"
    },
    "1357": {
      "op": "CALLER"
    },
    "1358": {
      "op": "EQ"
    },
    "1359": {
      "op": "PUSH2",
      "value": "0x4C5"
    },
    "1362": {
      "op": "JUMPI"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1365": {
      "op": "MLOAD"
    },
    "1366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "op": "DUP2"
    },
    "1374": {
      "op": "MSTORE"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "DUP2"
    },
    "1382": {
      "op": "SWAP1"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1386": {
      "op": "DUP3"
    },
    "1387": {
      "op": "ADD"
    },
    "1388": {
      "op": "MSTORE"
    },
    "1389": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1424": {
      "op": "DUP3"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "op": "PUSH2",
      "value": "0x251"
    },
    "1433": {
      "op": "JUMP"
    },
    "1434": {
      "op": "JUMPDEST"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1437": {
      "op": "DUP1"
    },
    "1438": {
      "op": "SLOAD"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "op": "DUP4"
    },
    "1448": {
      "op": "DUP2"
    },
    "1449": {
      "op": "AND"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "op": "NOT"
    },
    "1459": {
      "op": "DUP4"
    },
    "1460": {
      "op": "AND"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "OR"
    },
    "1463": {
      "op": "DUP5"
    },
    "1464": {
      "op": "SSTORE"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1467": {
      "op": "MLOAD"
    },
    "1468": {
      "op": "SWAP2"
    },
    "1469": {
      "op": "SWAP1"
    },
    "1470": {
      "op": "SWAP3"
    },
    "1471": {
      "op": "AND"
    },
    "1472": {
      "op": "SWAP3"
    },
    "1473": {
      "op": "DUP4"
    },
    "1474": {
      "op": "SWAP2"
    },
    "1475": {
      "op": "PUSH32",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1508": {
      "op": "SWAP2"
    },
    "1509": {
      "op": "SWAP1"
    },
    "1510": {
      "op": "LOG3"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "jump": "o",
      "op": "JUMP"
    },
    "1514": {
      "op": "JUMPDEST"
    },
    "1515": {
      "op": "DUP3"
    },
    "1516": {
      "op": "DUP1"
    },
    "1517": {
      "op": "SLOAD"
    },
    "1518": {
      "op": "PUSH2",
      "value": "0x5F6"
    },
    "1521": {
      "op": "SWAP1"
    },
    "1522": {
      "op": "PUSH2",
      "value": "0x755"
    },
    "1525": {
      "jump": "i",
      "op": "JUMP"
    },
    "1526": {
      "op": "JUMPDEST"
    },
    "1527": {
      "op": "SWAP1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1530": {
      "op": "MSTORE"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1535": {
      "op": "KECCAK256"
    },
    "1536": {
      "op": "SWAP1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1542": {
      "op": "SWAP1"
    },
    "1543": {
      "op": "DIV"
    },
    "1544": {
      "op": "DUP2"
    },
    "1545": {
      "op": "ADD"
    },
    "1546": {
      "op": "SWAP3"
    },
    "1547": {
      "op": "DUP3"
    },
    "1548": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1551": {
      "op": "JUMPI"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1554": {
      "op": "DUP6"
    },
    "1555": {
      "op": "SSTORE"
    },
    "1556": {
      "op": "PUSH2",
      "value": "0x65E"
    },
    "1559": {
      "op": "JUMP"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1564": {
      "op": "LT"
    },
    "1565": {
      "op": "PUSH2",
      "value": "0x631"
    },
    "1568": {
      "op": "JUMPI"
    },
    "1569": {
      "op": "DUP1"
    },
    "1570": {
      "op": "MLOAD"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1573": {
      "op": "NOT"
    },
    "1574": {
      "op": "AND"
    },
    "1575": {
      "op": "DUP4"
    },
    "1576": {
      "op": "DUP1"
    },
    "1577": {
      "op": "ADD"
    },
    "1578": {
      "op": "OR"
    },
    "1579": {
      "op": "DUP6"
    },
    "1580": {
      "op": "SSTORE"
    },
    "1581": {
      "op": "PUSH2",
      "value": "0x65E"
    },
    "1584": {
      "op": "JUMP"
    },
    "1585": {
      "op": "JUMPDEST"
    },
    "1586": {
      "op": "DUP3"
    },
    "1587": {
      "op": "DUP1"
    },
    "1588": {
      "op": "ADD"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "DUP6"
    },
    "1593": {
      "op": "SSTORE"
    },
    "1594": {
      "op": "DUP3"
    },
    "1595": {
      "op": "ISZERO"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x65E"
    },
    "1599": {
      "op": "JUMPI"
    },
    "1600": {
      "op": "SWAP2"
    },
    "1601": {
      "op": "DUP3"
    },
    "1602": {
      "op": "ADD"
    },
    "1603": {
      "op": "JUMPDEST"
    },
    "1604": {
      "op": "DUP3"
    },
    "1605": {
      "op": "DUP2"
    },
    "1606": {
      "op": "GT"
    },
    "1607": {
      "op": "ISZERO"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x65E"
    },
    "1611": {
      "op": "JUMPI"
    },
    "1612": {
      "op": "DUP3"
    },
    "1613": {
      "op": "MLOAD"
    },
    "1614": {
      "op": "DUP3"
    },
    "1615": {
      "op": "SSTORE"
    },
    "1616": {
      "op": "SWAP2"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1619": {
      "op": "ADD"
    },
    "1620": {
      "op": "SWAP2"
    },
    "1621": {
      "op": "SWAP1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "SWAP1"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x643"
    },
    "1629": {
      "op": "JUMP"
    },
    "1630": {
      "op": "JUMPDEST"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "op": "PUSH2",
      "value": "0x66A"
    },
    "1635": {
      "op": "SWAP3"
    },
    "1636": {
      "op": "SWAP2"
    },
    "1637": {
      "op": "POP"
    },
    "1638": {
      "op": "PUSH2",
      "value": "0x6B2"
    },
    "1641": {
      "jump": "i",
      "op": "JUMP"
    },
    "1642": {
      "op": "JUMPDEST"
    },
    "1643": {
      "op": "POP"
    },
    "1644": {
      "op": "SWAP1"
    },
    "1645": {
      "jump": "o",
      "op": "JUMP"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "PUSH2",
      "value": "0x1EE4"
    },
    "1650": {
      "op": "DUP1"
    },
    "1651": {
      "op": "PUSH3",
      "value": "0x7AE"
    },
    "1655": {
      "op": "DUP4"
    },
    "1656": {
      "op": "CODECOPY"
    },
    "1657": {
      "op": "ADD"
    },
    "1658": {
      "op": "SWAP1"
    },
    "1659": {
      "jump": "o",
      "op": "JUMP"
    },
    "1660": {
      "op": "JUMPDEST"
    },
    "1661": {
      "op": "POP"
    },
    "1662": {
      "op": "DUP1"
    },
    "1663": {
      "op": "SLOAD"
    },
    "1664": {
      "op": "PUSH2",
      "value": "0x688"
    },
    "1667": {
      "op": "SWAP1"
    },
    "1668": {
      "op": "PUSH2",
      "value": "0x755"
    },
    "1671": {
      "jump": "i",
      "op": "JUMP"
    },
    "1672": {
      "op": "JUMPDEST"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1675": {
      "op": "DUP3"
    },
    "1676": {
      "op": "SSTORE"
    },
    "1677": {
      "op": "DUP1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1680": {
      "op": "LT"
    },
    "1681": {
      "op": "PUSH2",
      "value": "0x698"
    },
    "1684": {
      "op": "JUMPI"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "op": "POP"
    },
    "1687": {
      "jump": "o",
      "op": "JUMP"
    },
    "1688": {
      "op": "JUMPDEST"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1691": {
      "op": "ADD"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1694": {
      "op": "SWAP1"
    },
    "1695": {
      "op": "DIV"
    },
    "1696": {
      "op": "SWAP1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1699": {
      "op": "MSTORE"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "KECCAK256"
    },
    "1705": {
      "op": "SWAP1"
    },
    "1706": {
      "op": "DUP2"
    },
    "1707": {
      "op": "ADD"
    },
    "1708": {
      "op": "SWAP1"
    },
    "1709": {
      "op": "PUSH2",
      "value": "0x53D"
    },
    "1712": {
      "op": "SWAP2"
    },
    "1713": {
      "op": "SWAP1"
    },
    "1714": {
      "op": "JUMPDEST"
    },
    "1715": {
      "op": "JUMPDEST"
    },
    "1716": {
      "op": "DUP1"
    },
    "1717": {
      "op": "DUP3"
    },
    "1718": {
      "op": "GT"
    },
    "1719": {
      "op": "ISZERO"
    },
    "1720": {
      "op": "PUSH2",
      "value": "0x66A"
    },
    "1723": {
      "op": "JUMPI"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1726": {
      "op": "DUP2"
    },
    "1727": {
      "op": "SSTORE"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "ADD"
    },
    "1731": {
      "op": "PUSH2",
      "value": "0x6B3"
    },
    "1734": {
      "op": "JUMP"
    },
    "1735": {
      "op": "JUMPDEST"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1740": {
      "op": "DUP1"
    },
    "1741": {
      "op": "DUP4"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "DUP4"
    },
    "1744": {
      "op": "MLOAD"
    },
    "1745": {
      "op": "DUP1"
    },
    "1746": {
      "op": "DUP3"
    },
    "1747": {
      "op": "DUP6"
    },
    "1748": {
      "op": "ADD"
    },
    "1749": {
      "op": "MSTORE"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1752": {
      "op": "JUMPDEST"
    },
    "1753": {
      "op": "DUP2"
    },
    "1754": {
      "op": "DUP2"
    },
    "1755": {
      "op": "LT"
    },
    "1756": {
      "op": "ISZERO"
    },
    "1757": {
      "op": "PUSH2",
      "value": "0x6F4"
    },
    "1760": {
      "op": "JUMPI"
    },
    "1761": {
      "op": "DUP6"
    },
    "1762": {
      "op": "DUP2"
    },
    "1763": {
      "op": "ADD"
    },
    "1764": {
      "op": "DUP4"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "op": "MLOAD"
    },
    "1767": {
      "op": "DUP6"
    },
    "1768": {
      "op": "DUP3"
    },
    "1769": {
      "op": "ADD"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "DUP3"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "PUSH2",
      "value": "0x6D8"
    },
    "1779": {
      "op": "JUMP"
    },
    "1780": {
      "op": "JUMPDEST"
    },
    "1781": {
      "op": "DUP2"
    },
    "1782": {
      "op": "DUP2"
    },
    "1783": {
      "op": "GT"
    },
    "1784": {
      "op": "ISZERO"
    },
    "1785": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1788": {
      "op": "JUMPI"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1793": {
      "op": "DUP4"
    },
    "1794": {
      "op": "DUP8"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "op": "MSTORE"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "POP"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1802": {
      "op": "ADD"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1805": {
      "op": "NOT"
    },
    "1806": {
      "op": "AND"
    },
    "1807": {
      "op": "SWAP3"
    },
    "1808": {
      "op": "SWAP1"
    },
    "1809": {
      "op": "SWAP3"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1813": {
      "op": "ADD"
    },
    "1814": {
      "op": "SWAP4"
    },
    "1815": {
      "op": "SWAP3"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "jump": "o",
      "op": "JUMP"
    },
    "1820": {
      "op": "JUMPDEST"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1827": {
      "op": "SHL"
    },
    "1828": {
      "op": "SUB"
    },
    "1829": {
      "op": "DUP2"
    },
    "1830": {
      "op": "AND"
    },
    "1831": {
      "op": "DUP2"
    },
    "1832": {
      "op": "EQ"
    },
    "1833": {
      "op": "PUSH2",
      "value": "0x53D"
    },
    "1836": {
      "op": "JUMPI"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1839": {
      "op": "DUP1"
    },
    "1840": {
      "op": "REVERT"
    },
    "1841": {
      "op": "JUMPDEST"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1846": {
      "op": "DUP3"
    },
    "1847": {
      "op": "DUP5"
    },
    "1848": {
      "op": "SUB"
    },
    "1849": {
      "op": "SLT"
    },
    "1850": {
      "op": "ISZERO"
    },
    "1851": {
      "op": "PUSH2",
      "value": "0x743"
    },
    "1854": {
      "op": "JUMPI"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1857": {
      "op": "DUP1"
    },
    "1858": {
      "op": "REVERT"
    },
    "1859": {
      "op": "JUMPDEST"
    },
    "1860": {
      "op": "DUP2"
    },
    "1861": {
      "op": "CALLDATALOAD"
    },
    "1862": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "1865": {
      "op": "DUP2"
    },
    "1866": {
      "op": "PUSH2",
      "value": "0x71C"
    },
    "1869": {
      "jump": "i",
      "op": "JUMP"
    },
    "1870": {
      "op": "JUMPDEST"
    },
    "1871": {
      "op": "SWAP4"
    },
    "1872": {
      "op": "SWAP3"
    },
    "1873": {
      "op": "POP"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "jump": "o",
      "op": "JUMP"
    },
    "1877": {
      "op": "JUMPDEST"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "DUP2"
    },
    "1881": {
      "op": "DUP2"
    },
    "1882": {
      "op": "SHR"
    },
    "1883": {
      "op": "SWAP1"
    },
    "1884": {
      "op": "DUP3"
    },
    "1885": {
      "op": "AND"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x769"
    },
    "1890": {
      "op": "JUMPI"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1893": {
      "op": "DUP3"
    },
    "1894": {
      "op": "AND"
    },
    "1895": {
      "op": "SWAP2"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "JUMPDEST"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1900": {
      "op": "DUP3"
    },
    "1901": {
      "op": "LT"
    },
    "1902": {
      "op": "DUP2"
    },
    "1903": {
      "op": "EQ"
    },
    "1904": {
      "op": "ISZERO"
    },
    "1905": {
      "op": "PUSH2",
      "value": "0x78A"
    },
    "1908": {
      "op": "JUMPI"
    },
    "1909": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1916": {
      "op": "SHL"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1919": {
      "op": "MSTORE"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1924": {
      "op": "MSTORE"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1929": {
      "op": "REVERT"
    },
    "1930": {
      "op": "JUMPDEST"
    },
    "1931": {
      "op": "POP"
    },
    "1932": {
      "op": "SWAP2"
    },
    "1933": {
      "op": "SWAP1"
    },
    "1934": {
      "op": "POP"
    },
    "1935": {
      "jump": "o",
      "op": "JUMP"
    },
    "1936": {
      "op": "JUMPDEST"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1941": {
      "op": "DUP3"
    },
    "1942": {
      "op": "DUP5"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "op": "SLT"
    },
    "1945": {
      "op": "ISZERO"
    },
    "1946": {
      "op": "PUSH2",
      "value": "0x7A2"
    },
    "1949": {
      "op": "JUMPI"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1952": {
      "op": "DUP1"
    },
    "1953": {
      "op": "REVERT"
    },
    "1954": {
      "op": "JUMPDEST"
    },
    "1955": {
      "op": "DUP2"
    },
    "1956": {
      "op": "MLOAD"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x74E"
    },
    "1960": {
      "op": "DUP2"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x71C"
    },
    "1964": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "6fead4b6673026b5383ecd487f67a4474a0f9c23",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.12;\n\nimport { MultiFeeDistribution } from \"./MultiFeeDistribution.sol\";\nimport { IMultiFeeDistributionFactory } from \"interfaces/IMultiFeeDistributionFactory.sol\";\nimport { IOwnable } from \"interfaces/IOwnable.sol\";\nimport { IICHIVault } from \"interfaces/IICHIVault.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MultiFeeDistributionFactory is IMultiFeeDistributionFactory, Ownable {\n    bytes32 public override constant bytecodeHash =\n        keccak256(type(MultiFeeDistribution).creationCode);\n\n    // This called in the MultiFeeDistribution constructor\n    bytes public override cachedDeployData;\n\n    mapping(address => address) public override vaultToStaker;\n\n    address public immutable ichiFactory;\n\n    constructor(address _ichiFactory) {\n        ichiFactory = _ichiFactory;\n    }\n\n    function deployStaker(address ichiVault) external override returns (address staker) {\n\n        require(vaultToStaker[ichiVault] == address(0), \"ALREADY_DEPLOYED\");\n\n        // NOTE: this doesn't ensure tight coupling, and serves more of a sanity check\n        // it's not easily possible to check if an ichiVault is registered with v1 of the ICHIVaultFactory\n        require(IICHIVault(ichiVault).ichiVaultFactory() == ichiFactory, \"INVALID_VF\");\n\n        bytes memory _deployData = abi.encode(ichiVault);\n        cachedDeployData = _deployData;\n\n        bytes32 salt = keccak256(_deployData);\n        staker = address(new MultiFeeDistribution{salt: salt}());\n\n        delete cachedDeployData;\n\n        vaultToStaker[ichiVault] = staker;\n\n        IOwnable(staker).transferOwnership(owner());\n\n        emit StakerCreated(msg.sender, staker);\n    }\n\n}\n",
  "sourceMap": "396:1340:10:-:0;;;804:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:8;936:18:0;:32::i;:::-;-1:-1:-1;;;;;848:26:10;;;396:1340;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:15:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:15;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:15:o;:::-;396:1340:10;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/MultiFeeDistributionFactory.sol",
  "type": "contract"
}